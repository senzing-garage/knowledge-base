CREATE TABLE LIB_FEAT (LIB_FEAT_ID BIGINT NOT NULL, FTYPE_ID smallint NOT NULL, VERSION smallint NOT NULL, FEAT_HASH VARCHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES CLOB(3000) NOT NULL, ANONYMIZED CHAR(1) NOT NULL, PRIMARY KEY(LIB_FEAT_ID)) ;
CREATE UNIQUE INDEX LIB_FEAT_SK ON LIB_FEAT(FEAT_HASH, FTYPE_ID, ANONYMIZED) ;
CREATE TABLE SYS_HW_CHECK (LIB_FEAT_ID BIGINT NOT NULL, FTYPE_ID smallint NOT NULL, VERSION smallint NOT NULL, FEAT_HASH VARCHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES CLOB(3000) NOT NULL, ANONYMIZED CHAR(1) NOT NULL, PRIMARY KEY(LIB_FEAT_ID)) ;
CREATE UNIQUE INDEX SYS_HW_CHECK_SK ON SYS_HW_CHECK(FEAT_HASH, FTYPE_ID, ANONYMIZED) ;
CREATE TABLE LIB_UTYPE (UTYPE_CODE VARCHAR(255) NOT NULL, PRIMARY KEY(UTYPE_CODE)) ;
CREATE TABLE DSRC_RECORD (CONFIG_ID BIGINT, FIRST_SEEN_DT TIMESTAMP, LAST_SEEN_DT TIMESTAMP, RECORD_ID VARCHAR(250) NOT NULL, ENT_SRC_KEY VARCHAR(40) NOT NULL, DSRC_ID smallint NOT NULL, JSON_DATA CLOB, PRIMARY KEY(RECORD_ID, DSRC_ID)) ;
CREATE INDEX DSRC_RECORD_SK ON DSRC_RECORD(ENT_SRC_KEY, DSRC_ID) ;
CREATE TABLE OBS_ENT (OBS_ENT_ID BIGINT NOT NULL, LOCKING_ID BIGINT NOT NULL, LAST_TOUCH_DT BIGINT, DSRC_ID smallint NOT NULL, LOCK_DSRC_ACTION CHAR(1), ENT_SRC_KEY VARCHAR(40) NOT NULL, FEATURES CLOB, PRIMARY KEY(OBS_ENT_ID)) ;
CREATE UNIQUE INDEX OBS_ENT_SK ON OBS_ENT(ENT_SRC_KEY, DSRC_ID) ;
CREATE TABLE RES_ENT (RES_ENT_ID BIGINT NOT NULL, LOCKING_ID BIGINT NOT NULL, LAST_TOUCH_DT BIGINT, LOCK_DSRC_ACTION CHAR(1), PRIMARY KEY(RES_ENT_ID)) ;
CREATE TABLE RES_ENT_OKEY (OBS_ENT_ID BIGINT NOT NULL, RES_ENT_ID BIGINT NOT NULL, MATCH_KEY CLOB(1000), ERRULE_ID smallint NOT NULL, PRIMARY KEY(OBS_ENT_ID)) ;
CREATE INDEX RES_ENT_OKEY_SK ON RES_ENT_OKEY(RES_ENT_ID, OBS_ENT_ID) ;
CREATE TABLE RES_FEAT_EKEY (RES_ENT_ID BIGINT NOT NULL, LIB_FEAT_ID BIGINT NOT NULL, OBS_ENT_CNT BIGINT, USED_FROM_DT TIMESTAMP, USED_THRU_DT TIMESTAMP, FTYPE_ID smallint NOT NULL, SUPPRESSED CHAR(1), UTYPE_CODE VARCHAR(255) NOT NULL, PRIMARY KEY(LIB_FEAT_ID, RES_ENT_ID, UTYPE_CODE)) ;
CREATE INDEX RES_FEAT_EKEY_SK ON RES_FEAT_EKEY(RES_ENT_ID) ;
CREATE TABLE RES_FEAT_STAT (LIB_FEAT_ID BIGINT NOT NULL, NUM_RES_ENT int NOT NULL, NUM_RES_ENT_OOM int NOT NULL, CANDIDATE_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL, SCORING_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL, PRIMARY KEY(LIB_FEAT_ID)) ;
CREATE TABLE RES_RELATE (RES_REL_ID BIGINT NOT NULL, MIN_RES_ENT_ID BIGINT NOT NULL, MAX_RES_ENT_ID BIGINT NOT NULL, LAST_ERRULE_ID smallint, IS_DISCLOSED BYTE(1), IS_AMBIGUOUS BYTE(1), MATCH_KEY CLOB(1000), MATCH_KEY_DETAILS CLOB(100000), MATCH_LEVELS VARCHAR(50), PRIMARY KEY(RES_REL_ID)) ;
CREATE TABLE RES_REL_EKEY (RES_ENT_ID BIGINT NOT NULL, REL_ENT_ID BIGINT NOT NULL, RES_REL_ID BIGINT NOT NULL, PRIMARY KEY(RES_ENT_ID, REL_ENT_ID)) ;
CREATE TABLE SYS_SEQUENCE (SEQUENCE_NAME VARCHAR(50) NOT NULL, NEXT_SEQUENCE BIGINT NOT NULL, CACHE_SIZE BIGINT NOT NULL, PRIMARY KEY(SEQUENCE_NAME)) ;
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('ER_ID',1,100000);
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('LIB_FEAT_ID',1,100000);
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('OBS_ENT_ID',1,100000);
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('OBS_ID',1,100000);
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('RES_REL_ID',1,100000);
CREATE TABLE SYS_CFG (CONFIG_DATA_ID BIGINT NOT NULL, CONFIG_DATA CLOB NOT NULL, CONFIG_COMMENTS VARCHAR(200) NOT NULL, SYS_CREATE_DT TIMESTAMP NOT NULL, PRIMARY KEY(CONFIG_DATA_ID)) ;
CREATE TABLE SYS_CODES_USED (CODE_TYPE VARCHAR(25) NOT NULL, CODE VARCHAR(25) NOT NULL, CODE_ID smallint NOT NULL, PRIMARY KEY(CODE_TYPE, CODE)) ;
CREATE UNIQUE INDEX SYS_CODES_USED_SK ON SYS_CODES_USED(CODE_TYPE, CODE_ID) ;
CREATE TABLE SYS_VARS (VAR_GROUP VARCHAR(25) NOT NULL, VAR_CODE VARCHAR(25) NOT NULL, VAR_VALUE VARCHAR(25) NOT NULL, SYS_LSTUPD_DT TIMESTAMP, PRIMARY KEY(VAR_GROUP, VAR_CODE)) ;
INSERT INTO SYS_VARS (VAR_GROUP,VAR_CODE,VAR_VALUE) VALUES ('VERSION','SCHEMA','4.0');
CREATE TABLE SYS_STATUS (SYSTEM_CODE VARCHAR(50) NOT NULL, LAST_TOUCH_DT TIMESTAMP, PRIMARY KEY(SYSTEM_CODE)) ;
CREATE TABLE SYS_EVAL_QUEUE (MSG_ID BIGINT NOT NULL, DSRC_CODE VARCHAR(25) NOT NULL, ENT_SRC_KEY VARCHAR(40) NOT NULL, MSG CLOB, PRIMARY KEY(MSG_ID)) ;
CREATE UNIQUE INDEX IX_EVAL_QUEUE ON SYS_EVAL_QUEUE(ENT_SRC_KEY, DSRC_CODE) ;
