_DLEXPORT long long G2_init(const char *moduleName, const char *iniParams, const long long verboseLogging);
_DLEXPORT long long G2_initWithConfigID(const char *moduleName, const char *iniParams, const long long initConfigID, const long long verboseLogging);
_DLEXPORT long long G2_reinit(const long long initConfigID);
_DLEXPORT long long G2_destroy();
_DLEXPORT long long G2_primeEngine();
_DLEXPORT long long G2_process(const char *record);
_DLEXPORT long long G2_processWithInfo(const char *record, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_processWithResponse(const char *record, char *responseBuf, const size_t bufSize);
_DLEXPORT long long G2_processWithResponseResize(const char *record, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_checkRecord(const char *record, const char *recordQueryList, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_processRedoRecord(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_processRedoRecordWithInfo(const long long flags, char **responseBuf, size_t *bufSize, char **infoBuf, size_t *infoBufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getRedoRecord(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_countRedoRecords();
_DLEXPORT long long G2_stats(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_exportConfig(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_exportConfigAndConfigID(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize), long long *configID);
_DLEXPORT long long G2_getActiveConfigID(long long *configID);
_DLEXPORT long long G2_getRepositoryLastModifiedTime(long long *lastModifiedTime);
_DLEXPORT long long G2_addRecord(const char *dataSourceCode, const char *recordID, const char *jsonData, const char *loadID);
_DLEXPORT long long G2_addRecordWithReturnedRecordID(const char *dataSourceCode, const char *jsonData, const char *loadID, char *recordIDBuf, const size_t bufSize);
_DLEXPORT long long G2_addRecordWithInfo(const char *dataSourceCode, const char *recordID, const char *jsonData, const char *loadID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_addRecordWithInfoWithReturnedRecordID(const char *dataSourceCode, const char *jsonData, const char *loadID, const long long flags, char *recordIDBuf, const size_t recordIDBufSize, char **responseBuf, size_t *responseBufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_replaceRecord(const char *dataSourceCode, const char *recordID, const char *jsonData, const char *loadID);
_DLEXPORT long long G2_replaceRecordWithInfo(const char *dataSourceCode, const char *recordID, const char *jsonData, const char *loadID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_reevaluateRecord(const char *dataSourceCode, const char *recordID, const long long flags);
_DLEXPORT long long G2_reevaluateEntity(const long long entityID, const long long flags);
_DLEXPORT long long G2_reevaluateRecordWithInfo(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_reevaluateEntityWithInfo(const long long entityID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_deleteRecord(const char *dataSourceCode, const char *recordID, const char *loadID);
_DLEXPORT long long G2_deleteRecordWithInfo(const char *dataSourceCode, const char *recordID, const char *loadID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_searchByAttributes(const char *jsonData, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_searchByAttributes_V2(const char *jsonData, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_searchByAttributes_V3(const char *jsonData, const char *searchProfile, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getEntityByEntityID(const long long entityID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getEntityByEntityID_V2(const long long entityID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getEntityByRecordID(const char *dataSourceCode, const char *recordID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getEntityByRecordID_V2(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getRecord(const char *dataSourceCode, const char *recordID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getRecord_V2(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathByEntityID(const long long entityID1, const long long entityID2, const long long maxDegree, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathByEntityID_V2(const long long entityID1, const long long entityID2, const long long maxDegree, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathByRecordID(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathByRecordID_V2(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathExcludingByEntityID(const long long entityID1, const long long entityID2, const long long maxDegree, const char *excludedEntities, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathExcludingByEntityID_V2(const long long entityID1, const long long entityID2, const long long maxDegree, const char *excludedEntities, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathExcludingByRecordID(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, const char *excludedRecords, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathExcludingByRecordID_V2(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, const char *excludedRecords, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathIncludingSourceByEntityID(const long long entityID1, const long long entityID2, const long long maxDegree, const char *excludedEntities, const char *requiredDsrcs, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathIncludingSourceByEntityID_V2(const long long entityID1, const long long entityID2, const long long maxDegree, const char *excludedEntities, const char *requiredDsrcs, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathIncludingSourceByRecordID(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, const char *excludedRecords, const char *requiredDsrcs, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findPathIncludingSourceByRecordID_V2(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long maxDegree, const char *excludedRecords, const char *requiredDsrcs, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findNetworkByEntityID(const char *entityList, const long long maxDegree, const long long buildOutDegree, const long long maxEntities, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findNetworkByEntityID_V2(const char *entityList, const long long maxDegree, const long long buildOutDegree, const long long maxEntities, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findNetworkByRecordID(const char *recordList, const long long maxDegree, const long long buildOutDegree, const long long maxEntities, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findNetworkByRecordID_V2(const char *recordList, const long long maxDegree, const long long buildOutDegree, const long long maxEntities, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findInterestingEntitiesByEntityID(const long long entityID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_findInterestingEntitiesByRecordID(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntityByRecordID(const char *dataSourceCode, const char *recordID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntityByRecordID_V2(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntityByEntityID(const long long entityID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntityByEntityID_V2(const long long entityID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyRecordInEntity(const char *dataSourceCode, const char *recordID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyRecordInEntity_V2(const char *dataSourceCode, const char *recordID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyRecords(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyRecords_V2(const char *dataSourceCode1, const char *recordID1, const char *dataSourceCode2, const char *recordID2, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntities(const long long entityID1, const long long entityID2, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_whyEntities_V2(const long long entityID1, const long long entityID2, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_howEntityByEntityID(const long long entityID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_howEntityByEntityID_V2(const long long entityID, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getVirtualEntityByRecordID(const char *recordList, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_getVirtualEntityByRecordID_V2(const char *recordList, const long long flags, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2_purgeRepository();
_DLEXPORT long long G2_exportJSONEntityReport(const long long flags, ExportHandle *responseHandle);
_DLEXPORT long long G2_exportCSVEntityReport(const char *csvColumnList, const long long flags, ExportHandle *responseHandle);
_DLEXPORT long long G2_fetchNext(ExportHandle responseHandle, char *responseBuf, const size_t bufSize);
_DLEXPORT long long G2_closeExport(ExportHandle responseHandle);
_DLEXPORT long long G2_getLastException(char *buffer, const size_t bufSize);
_DLEXPORT long long G2_getLastExceptionCode();
_DLEXPORT void G2_clearLastException();
_DLEXPORT long long G2Config_init(const char *moduleName, const char *iniParams, const long long verboseLogging);
_DLEXPORT long long G2Config_destroy();
_DLEXPORT long long G2Config_create(ConfigHandle *configHandle);
_DLEXPORT long long G2Config_load(const char *jsonConfig, ConfigHandle *configHandle);
_DLEXPORT long long G2Config_save(ConfigHandle configHandle, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Config_close(ConfigHandle configHandle);
_DLEXPORT long long G2Config_listDataSources(ConfigHandle configHandle, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Config_addDataSource(ConfigHandle configHandle, const char *inputJson, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Config_deleteDataSource(ConfigHandle configHandle, const char *inputJson);
_DLEXPORT long long G2Config_getLastException(char *buffer, const size_t bufSize);
_DLEXPORT long long G2Config_getLastExceptionCode();
_DLEXPORT void G2Config_clearLastException();
_DLEXPORT long long G2ConfigMgr_init(const char *moduleName, const char *iniParams, const long long verboseLogging);
_DLEXPORT long long G2ConfigMgr_destroy();
_DLEXPORT long long G2ConfigMgr_addConfig(const char *configStr, const char *configComments, long long *configID);
_DLEXPORT long long G2ConfigMgr_getConfig(const long long configID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2ConfigMgr_getConfigList(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2ConfigMgr_setDefaultConfigID(const long long configID);
_DLEXPORT long long G2ConfigMgr_getDefaultConfigID(long long *configID);
_DLEXPORT long long G2ConfigMgr_replaceDefaultConfigID(const long long oldConfigID, const long long newConfigID);
_DLEXPORT long long G2ConfigMgr_getLastException(char *buffer, const size_t bufSize);
_DLEXPORT long long G2ConfigMgr_getLastExceptionCode();
_DLEXPORT void G2ConfigMgr_clearLastException();
_DLEXPORT long long G2Diagnostic_init(const char *moduleName, const char *iniParams, const long long verboseLogging);
_DLEXPORT long long G2Diagnostic_initWithConfigID(const char *moduleName, const char *iniParams, const long long initConfigID, const long long verboseLogging);
_DLEXPORT long long G2Diagnostic_reinit(const long long initConfigID);
_DLEXPORT long long G2Diagnostic_destroy();
_DLEXPORT long long G2Diagnostic_checkDBPerf(const long long secondsToRun, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getLastException(char *buffer, const size_t bufSize);
_DLEXPORT long long G2Diagnostic_getLastExceptionCode();
_DLEXPORT void G2Diagnostic_clearLastException();
_DLEXPORT long long G2Diagnostic_getPhysicalCores();
_DLEXPORT long long G2Diagnostic_getLogicalCores();
_DLEXPORT long long G2Diagnostic_getTotalSystemMemory();
_DLEXPORT long long G2Diagnostic_getAvailableMemory();
_DLEXPORT long long G2Diagnostic_getDBInfo(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getDataSourceCounts(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getMappingStatistics(const long long includeInternalFeatures, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getGenericFeatures(const char *featureType, const size_t maximumEstimatedCount, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getEntitySizeBreakdown(const size_t minimumEntitySize, const long long includeInternalFeatures, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getEntityDetails(const long long entityID, const long long includeInternalFeatures, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getResolutionStatistics(char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getRelationshipDetails(const long long relationshipID, const long long includeInternalFeatures, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getEntityResume(const long long entityID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getEntityListBySize(const size_t entitySize, EntityListBySizeHandle *entityListBySizeHandle);
_DLEXPORT long long G2Diagnostic_fetchNextEntityBySize(EntityListBySizeHandle entityListBySizeHandle, char *responseBuf, const size_t bufSize);
_DLEXPORT long long G2Diagnostic_closeEntityListBySize(EntityListBySizeHandle entityListBySizeHandle);
_DLEXPORT long long G2Diagnostic_findEntitiesByFeatureIDs(const char *features, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Diagnostic_getFeature(const long long libFeatID, char **responseBuf, size_t *bufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Product_init(const char *moduleName, const char *iniParams, const long long verboseLogging);
_DLEXPORT long long G2Product_destroy();
_DLEXPORT char *G2Product_license();
_DLEXPORT long long G2Product_validateLicenseFile(const char *licenseFilePath, char **errorBuf, size_t *errorBufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT long long G2Product_validateLicenseStringBase64(const char *licenseString, char **errorBuf, size_t *errorBufSize, void *(*resizeFunc)(void *ptr, size_t newSize));
_DLEXPORT char *G2Product_version();
_DLEXPORT long long G2Product_getLastException(char *buffer, const size_t bufSize);
_DLEXPORT long long G2Product_getLastExceptionCode();
_DLEXPORT void G2Product_clearLastException();